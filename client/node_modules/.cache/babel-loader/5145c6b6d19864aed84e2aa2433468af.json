{"ast":null,"code":"var _jsxFileName = \"/home/aboardwithabag/Projects/consulting/src/TuiCalendar.js\";\nimport React from 'react';\nimport './TuiCalendar.css';\nimport Calendar from 'tui-calendar';\n/* ES6 */\n\nimport \"tui-calendar/dist/tui-calendar.css\"; // If you use the default popups, use this.\n\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\nconst myTheme = {// Theme object to extends default dark theme.\n};\n\nconst TuiCalendar = () => /*#__PURE__*/React.createElement(Calendar, {\n  height: \"900px\",\n  calendars: [{\n    id: '0',\n    name: 'Private',\n    bgColor: '#9e5fff',\n    borderColor: '#9e5fff'\n  }, {\n    id: '1',\n    name: 'Company',\n    bgColor: '#00a9ff',\n    borderColor: '#00a9ff'\n  }],\n  disableDblClick: true,\n  disableClick: false,\n  isReadOnly: false,\n  month: {\n    startDayOfWeek: 0\n  },\n  schedules: [{\n    id: '1',\n    calendarId: '0',\n    title: 'TOAST UI Calendar Study',\n    category: 'time',\n    dueDateClass: '',\n    start: today.toISOString(),\n    end: getDate('hours', today, 3, '+').toISOString()\n  }, {\n    id: '2',\n    calendarId: '0',\n    title: 'Practice',\n    category: 'milestone',\n    dueDateClass: '',\n    start: getDate('date', today, 1, '+').toISOString(),\n    end: getDate('date', today, 1, '+').toISOString(),\n    isReadOnly: true\n  }, {\n    id: '3',\n    calendarId: '0',\n    title: 'FE Workshop',\n    category: 'allday',\n    dueDateClass: '',\n    start: getDate('date', today, 2, '-').toISOString(),\n    end: getDate('date', today, 1, '-').toISOString(),\n    isReadOnly: true\n  }, {\n    id: '4',\n    calendarId: '0',\n    title: 'Report',\n    category: 'time',\n    dueDateClass: '',\n    start: today.toISOString(),\n    end: getDate('hours', today, 1, '+').toISOString()\n  }],\n  scheduleView: true,\n  taskView: true,\n  template: {\n    milestone(schedule) {\n      return `<span style=\"color:#fff;background-color: ${schedule.bgColor};\">${schedule.title}</span>`;\n    },\n\n    milestoneTitle() {\n      return 'Milestone';\n    },\n\n    allday(schedule) {\n      return `${schedule.title}<i class=\"fa fa-refresh\"></i>`;\n    },\n\n    alldayTitle() {\n      return 'All Day';\n    }\n\n  },\n  theme: myTheme,\n  timezones: [{\n    timezoneOffset: 540,\n    displayLabel: 'GMT+09:00',\n    tooltip: 'Seoul'\n  }, {\n    timezoneOffset: -420,\n    displayLabel: 'GMT-08:00',\n    tooltip: 'Los Angeles'\n  }],\n  useDetailPopup: true,\n  useCreationPopup: true,\n  view: selectedView // You can also set the `defaultView` option.\n  ,\n  week: {\n    showTimezoneCollapseButton: true,\n    timezonesCollapsed: true\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n});\n/*\nfunction TuiCalendar() {\n\n  let calendar = new Calendar('#calendar', {\n    defaultView: 'month',\n    taskView: true,\n    template: {\n      monthDayname: function(dayname) {\n        return '<span class=\"calendar-week-dayname-name\">' + dayname.label + '</span>';\n      }\n    }\n  });\n\n  calendar.createSchedules([]);\n\n  return (\n    <div id=\"calendar\"></div>\n  );\n}\n*/\n\n\nexport default TuiCalendar;","map":{"version":3,"sources":["/home/aboardwithabag/Projects/consulting/src/TuiCalendar.js"],"names":["React","Calendar","myTheme","TuiCalendar","id","name","bgColor","borderColor","startDayOfWeek","calendarId","title","category","dueDateClass","start","today","toISOString","end","getDate","isReadOnly","milestone","schedule","milestoneTitle","allday","alldayTitle","timezoneOffset","displayLabel","tooltip","selectedView","showTimezoneCollapseButton","timezonesCollapsed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TuiCalendar.css';\n\nimport Calendar from 'tui-calendar'; /* ES6 */\nimport \"tui-calendar/dist/tui-calendar.css\";\n\n// If you use the default popups, use this.\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\n\nconst myTheme = {\n  // Theme object to extends default dark theme.\n};\n\nconst TuiCalendar = () => (\n  <Calendar\n    height=\"900px\"\n    calendars={[\n      {\n        id: '0',\n        name: 'Private',\n        bgColor: '#9e5fff',\n        borderColor: '#9e5fff'\n      },\n      {\n        id: '1',\n        name: 'Company',\n        bgColor: '#00a9ff',\n        borderColor: '#00a9ff'\n      }\n    ]}\n    disableDblClick={true}\n    disableClick={false}\n    isReadOnly={false}\n    month={{\n      startDayOfWeek: 0\n    }}\n    schedules={[\n      {\n        id: '1',\n        calendarId: '0',\n        title: 'TOAST UI Calendar Study',\n        category: 'time',\n        dueDateClass: '',\n        start: today.toISOString(),\n        end: getDate('hours', today, 3, '+').toISOString()\n      },\n      {\n        id: '2',\n        calendarId: '0',\n        title: 'Practice',\n        category: 'milestone',\n        dueDateClass: '',\n        start: getDate('date', today, 1, '+').toISOString(),\n        end: getDate('date', today, 1, '+').toISOString(),\n        isReadOnly: true\n      },\n      {\n        id: '3',\n        calendarId: '0',\n        title: 'FE Workshop',\n        category: 'allday',\n        dueDateClass: '',\n        start: getDate('date', today, 2, '-').toISOString(),\n        end: getDate('date', today, 1, '-').toISOString(),\n        isReadOnly: true\n      },\n      {\n        id: '4',\n        calendarId: '0',\n        title: 'Report',\n        category: 'time',\n        dueDateClass: '',\n        start: today.toISOString(),\n        end: getDate('hours', today, 1, '+').toISOString()\n      }\n    ]}\n    scheduleView\n    taskView\n    template={{\n      milestone(schedule) {\n        return `<span style=\"color:#fff;background-color: ${schedule.bgColor};\">${\n          schedule.title\n        }</span>`;\n      },\n      milestoneTitle() {\n        return 'Milestone';\n      },\n      allday(schedule) {\n        return `${schedule.title}<i class=\"fa fa-refresh\"></i>`;\n      },\n      alldayTitle() {\n        return 'All Day';\n      }\n    }}\n    theme={myTheme}\n    timezones={[\n      {\n        timezoneOffset: 540,\n        displayLabel: 'GMT+09:00',\n        tooltip: 'Seoul'\n      },\n      {\n        timezoneOffset: -420,\n        displayLabel: 'GMT-08:00',\n        tooltip: 'Los Angeles'\n      }\n    ]}\n    useDetailPopup\n    useCreationPopup\n    view={selectedView} // You can also set the `defaultView` option.\n    week={{\n      showTimezoneCollapseButton: true,\n      timezonesCollapsed: true\n    }}\n  />\n);\n\n\n/*\nfunction TuiCalendar() {\n\n  let calendar = new Calendar('#calendar', {\n    defaultView: 'month',\n    taskView: true,\n    template: {\n      monthDayname: function(dayname) {\n        return '<span class=\"calendar-week-dayname-name\">' + dayname.label + '</span>';\n      }\n    }\n  });\n\n  calendar.createSchedules([]);\n\n  return (\n    <div id=\"calendar\"></div>\n  );\n}\n*/\n\n\nexport default TuiCalendar;\n"]},"metadata":{},"sourceType":"module"}